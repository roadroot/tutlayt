generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(nanoid())
  username     String       @unique
  email        String       @unique
  phone        String?      @unique
  updateDate   DateTime     @updatedAt
  creationDate DateTime     @default(now())
  creds        Credential[]
  questions    Question[]
  pictures     File[]
  Answer       Answer[]
  Comment      Comment[]
}

model Credential {
  id           String   @id @default(nanoid())
  userId       String
  password     String
  creationDate DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])
}

model Question {
  id           String   @id @default(nanoid())
  userId       String
  updateDate   DateTime @updatedAt
  creationDate DateTime @default(now())
  title        String
  body         String
  files        File[]
  user         User     @relation(fields: [userId], references: [id])
  Answer       Answer[]
}

model Answer {
  id           String   @id @default(nanoid())
  question     Question @relation(fields: [questionId], references: [id])
  userId       String
  updateDate   DateTime @updatedAt
  creationDate DateTime @default(now())
  title        String?
  body         String
  files        File[]
  user         User     @relation(fields: [userId], references: [id])
  questionId   String
}

model Comment {
  id           String   @id @default(nanoid())
  userId       String
  updateDate   DateTime @updatedAt
  creationDate DateTime @default(now())
  body         String
  files        File[]
  user         User     @relation(fields: [userId], references: [id])
}

model File {
  id           String    @id @default(cuid())
  path         String    @unique
  updateDate   DateTime  @updatedAt
  creationDate DateTime  @default(now())
  questionId   String?
  Question     Question? @relation(fields: [questionId], references: [id])
  User         User?     @relation(fields: [userId], references: [id])
  userId       String?
  Answer       Answer?   @relation(fields: [answerId], references: [id])
  answerId     String?
  Comment      Comment?  @relation(fields: [commentId], references: [id])
  commentId    String?
}
